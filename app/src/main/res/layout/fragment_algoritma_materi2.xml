<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    tools:context=".UserInterface.Belajar.Algoritma.FragmentAlgoritmaMateri2">

    <ScrollView
        android:id="@+id/scrollView4"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="50dp"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.0">

        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <ImageView
                android:id="@+id/FirstTheory"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:src="@drawable/strukturdasarimgnew"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

            <androidx.constraintlayout.widget.ConstraintLayout
                android:id="@+id/layoutPengertianSD"
                android:layout_width="450dp"
                android:layout_height="match_parent"
                android:layout_marginBottom="32dp"
                android:background="@color/colorAegeanBlue"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/FirstTheory"
                app:layout_constraintVertical_bias="0.0">


                <TextView
                    android:id="@+id/ciriciriAlgoritma"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="24dp"
                    android:text="Ciri - ciri algoritma"
                    android:textColor="@color/colorAqua"
                    android:textSize="22dp"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toTopOf="parent" />

                <TextView
                    android:id="@+id/ciriAlgoritmaDefinisi"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="Tidak semua urutan langkah penyelesaian masalah yang logis dapat disebut sebagai
algoritma. Menurut Donald E. Knuth, algoritma mempunyai lima ciri penting yang meliputi: \n1. Finiteness (keterbatasan), algoritma &#160;&#160;&#160;&#160;&#160;harus berakhir setelah mengerjakan &#160;&#160;&#160;&#160;&#160;sejumlah langkah
proses. \n2. Definiteness (kepastian), setiap &#160;&#160;&#160;&#160;&#160;langkah harus didefinisikan secara &#160;&#160;&#160;&#160;&#160;tepat dan tidak berarti
ganda. \n3. Input (masukan), algoritma memiliki &#160;&#160;&#160;&#160;&#160;nol atau lebih data masukan (input). \n4. Output (keluaran), algoritma &#160;&#160;&#160;&#160;&#160;mempunyai nol atau lebih hasil &#160;&#160;&#160;&#160;&#160;keluaran (output). \n5. Effectiveness (efektivitas), &#160;&#160;&#160;&#160;&#160;algoritma harus sangkil (efektif), &#160;&#160;&#160;&#160;&#160;langkah-langkah algoritma
dikerjakan &#160;&#160;&#160;&#160;&#160;dalam waktu yang wajar.   "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="0.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/ciriciriAlgoritma" />

                <TextView
                    android:id="@+id/sifatAlgoritma"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="24dp"
                    android:text="Sifat algoritma"
                    android:textColor="@color/colorAqua"
                    android:textSize="22dp"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/ciriAlgoritmaDefinisi" />

                <TextView
                    android:id="@+id/sifatAlgoritmaDefinisi"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="1. Tidak menggunakan simbol atau \n&#160;&#160;&#160;&#160;&#160;sintaks dari suatu bahasa &#160;&#160;&#160;&#160;&#160;pemrograman tertentu.
\n2. Tidak tergantung pada suatu bahasa &#160;&#160;&#160;&#160;&#160;pemrograman tertentu. \n3. Notasi-notasinya dapat digunakan &#160;&#160;&#160;&#160;&#160;untuk seluruh bahasa manapun \n4. Algoritma dapat digunakan untuk &#160;&#160;&#160;&#160;&#160;merepresentasikan suatu urutan &#160;&#160;&#160;&#160;&#160;kejadian secara logis
dan dapat &#160;&#160;&#160;&#160;&#160;diterapkan di semua kejadian &#160;&#160;&#160;&#160;&#160;sehari-hari "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="0.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/sifatAlgoritma" />

                <TextView
                    android:id="@+id/strukturDasarAlgoritma"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="24dp"
                    android:text="Struktur dasar algoritma"
                    android:textColor="@color/colorAqua"
                    android:textSize="22dp"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/sifatAlgoritmaDefinisi" />


                <ImageView
                    android:id="@+id/imageView2"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:src="@drawable/sda"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="0.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/strukturDasarAlgoritma" />


                <TextView
                    android:id="@+id/strukturDasarAlgoritmaRuntunan"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="Struktur dasar algorima atau penyusunan algoritma adalah sebuah langkah - langkah.
\nSuatu Algoritma dapat terdiri dari tiga struktur dasar yaitu sebagai berikut : \n\n1. Runtunan (sequence)\n&#160;&#160;&#160;&#160;&#160;Sebuah runtunan terdiri dari satu &#160;&#160;&#160;&#160;&#160;atau lebih instruksi. Tiap instruksi &#160;&#160;&#160;&#160;&#160;dikerjakan secara
berurutan sesuai &#160;&#160;&#160;&#160;&#160;dengan urutan penulisannya, yakni &#160;&#160;&#160;&#160;&#160;sebuah instruksi dilaksanakan &#160;&#160;&#160;&#160;&#160;setelah
instruksi sebelumnya &#160;&#160;&#160;&#160;&#160;selesai dikerjakan. Urutan dari &#160;&#160;&#160;&#160;&#160;instruksi menentukan hasil akhir &#160;&#160;&#160;&#160;&#160;dari
suatu algoritma. Bila urutan &#160;&#160;&#160;&#160;&#160;penulisan berubah maka mungkin &#160;&#160;&#160;&#160;&#160;juga hasil akhirnya berubah.
Sebagai &#160;&#160;&#160;&#160;&#160;contoh perhatikan operasi aritmatika &#160;&#160;&#160;&#160;&#160;berikut ini, (4+3)*7=49, tetapi bila &#160;&#160;&#160;&#160;&#160;urutan
aksinya diubah maka hasil &#160;&#160;&#160;&#160;&#160;keluaran akan berbeda menjadi &#160;&#160;&#160;&#160;&#160;4+(3*7) =25. "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="1.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/imageView2" />

                <TextView
                    android:id="@+id/strukturDasarAlgoritmaRuntunanCont"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="32dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="&#160;&#160;&#160;&#160;&#160;Contoh lain dari runtunan aksi adalah &#160;&#160;&#160;&#160;&#160;algoritma penukaran dua bilangan \n &#160;&#160;&#160;&#160;&#160;bulat, yaitu:
\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1. Deklarasikan A, B, dan X sebagai &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bilangan bulat
\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;2. Masukkan nilai A dan B
\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;3. Masukkan nilai A ke dalam X
\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;4. Masukkan nilai B ke dalam A
\n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;5. Masukkan nilai X ke dalam B"
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="1.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/strukturDasarAlgoritmaRuntunan" />

                <TextView
                    android:id="@+id/strukturDasarAlgoritmaPemilihan"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="32dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="2. Pemilihan (selection) \n&#160;&#160;&#160;&#160;&#160;Pemilihan yaitu instruksi yang &#160;&#160;&#160;&#160;&#160;dikerjakan dengan kondisi tertentu.
&#160;&#160;&#160;&#160;&#160;Kondisi adalah persyaratan yang \n&#160;&#160;&#160;&#160;&#160;dapat bernilai benar atau salah. \n&#160;&#160;&#160;&#160;&#160;Satu atau beberapa instruksi
hanya &#160;&#160;&#160;&#160;&#160;dilaksanakan apabila kondisi \n&#160;&#160;&#160;&#160;&#160;bernilai benar, sebaliknya apabila \n&#160;&#160;&#160;&#160;&#160;salah maka instruksi
tidak akan &#160;&#160;&#160;&#160;&#160;dilaksanakan. Contoh kasus pemilihan &#160;&#160;&#160;&#160;&#160;adalah dalam penentuan bilangan \n&#160;&#160;&#160;&#160;&#160;genap
atau ganjil berikut ini : \n&#160;&#160;&#160;&#160;&#160;1. Masukkan bilangan sebagai sebuah &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;bilangan bulat
\n&#160;&#160;&#160;&#160;&#160;2. Bagi bilangan dengan angka 2, &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;simpan nilai sisa pembagian dalam &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;variabel sisa
\n&#160;&#160;&#160;&#160;&#160;3. Jika nilai sisa sama dengan 0 maka &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;kerjakan langkah 4
\n&#160;&#160;&#160;&#160;&#160;4. Tampilkan ”GENAP” ke layar
\n&#160;&#160;&#160;&#160;&#160;5. Jika nilai sisa tidak sama dengan 0 &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;maka kerjakan langkah 6
\n&#160;&#160;&#160;&#160;&#160;6. Tampilkan ”GANJIL” ke layar
\n&#160;&#160;&#160;&#160;&#160;7. Selesai.  "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="1.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/strukturDasarAlgoritmaRuntunanCont" />


                <TextView
                    android:id="@+id/strukturDasarAlgoritmaPengulangan"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="32dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="3. Pengulangan (repetition)\n&#160;&#160;&#160;&#160;&#160;Pengulangan merupakan kegiatan &#160;&#160;&#160;&#160;&#160;mengerjakan sebuah atau sejumlah &#160;&#160;&#160;&#160;&#160;aksi yang sama
sebanyak jumlah yang &#160;&#160;&#160;&#160;&#160;ditentukan atau sesuai dengan kondisi &#160;&#160;&#160;&#160;&#160;yang diinginkan. Beberapa
statemen &#160;&#160;&#160;&#160;&#160;pengulangan di bahasa pemrograman &#160;&#160;&#160;&#160;&#160;yaitu for…, while()..., do...while(),
&#160;&#160;&#160;&#160;&#160;repeat....until, for...downto...do, &#160;&#160;&#160;&#160;&#160;for...to...do dan lain-lain. Sebagai \n&#160;&#160;&#160;&#160;&#160;contoh adalah
menampilkan huruf &#160;&#160;&#160;&#160;&#160;tertentu sebanyak n kali ke layar &#160;&#160;&#160;&#160;&#160;sebagai berikut : \n&#160;&#160;&#160;&#160;&#160;1. Deklarasikan variabel huruf &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;untuk menyimpan karakter yang &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;akan ditampilkan.
\n&#160;&#160;&#160;&#160;&#160;2. Deklarasikan variabel n untuk &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;menyimpan banyaknya perulangan
\n&#160;&#160;&#160;&#160;&#160;3. Deklarasikan variabel counter yang \n&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;digunakan sebagai counter &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;perulangan yang
sudah dilakukan.
\n&#160;&#160;&#160;&#160;&#160;4. Masukkan sebuah karakter dan &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;simpan dalam variabel huruf
\n&#160;&#160;&#160;&#160;&#160;5. Masukkan banyaknya perulangan &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;yang diinginkan dan simpan dalam &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;variabel n
\n&#160;&#160;&#160;&#160;&#160;6. Set nilai counter dengan 0
\n&#160;&#160;&#160;&#160;&#160;7. Tampilkan huruf ke layar
\n&#160;&#160;&#160;&#160;&#160;8. Lakukan penambahan counter &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;dengan 1
\n&#160;&#160;&#160;&#160;&#160;9. Jika nilai counter kurang dari n &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;maka kerjakan langkah 6
\n&#160;&#160;&#160;&#160;&#160;10. Jika nilai counter = n selesai
 "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="1.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/strukturDasarAlgoritmaPemilihan" />

                <TextView
                    android:id="@+id/perbedaanAlgoritmaDanProgram"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="24dp"
                    android:text="Perbedaan algoritma dan program"
                    android:textColor="@color/colorAqua"
                    android:textSize="22dp"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/strukturDasarAlgoritmaPengulangan" />

                <ImageView
                    android:id="@+id/imageView3"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:src="@drawable/perbedaanalgoritmadanprogram"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="0.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/perbedaanAlgoritmaDanProgram" />

                <TextView
                    android:id="@+id/perbedaanAlgoritmaDanProgramdesk"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_marginStart="16dp"
                    android:layout_marginLeft="16dp"
                    android:layout_marginTop="16dp"
                    android:layout_marginEnd="16dp"
                    android:layout_marginRight="16dp"
                    android:layout_marginBottom="32dp"
                    android:lineSpacingMultiplier="1.5"
                    android:text="Algoritma adalah urutan
langkah-langkah terbatas yang disusun secara sistematis dan menggunakan bahasa yang logis
dengan tujuan menyelesaikan suatu masalah tertentu. Sementara program adalah kumpulan
instruksi berupa pernyataan yang ditulis dengan menggunakan bahasa pemrograman yang
melibatkan pemilihan struktur data. Beberapa pakar komputer menyatakan program dengan
formula Program = Algoritma + Bahasa Pemrograman.
 "
                    android:textColor="@color/colorWhite"
                    android:textSize="20sp"
                    app:layout_constraintBottom_toBottomOf="parent"
                    app:layout_constraintEnd_toEndOf="parent"
                    app:layout_constraintHorizontal_bias="1.0"
                    app:layout_constraintStart_toStartOf="parent"
                    app:layout_constraintTop_toBottomOf="@+id/imageView3"
                    app:layout_constraintVertical_bias="0.0" />
            </androidx.constraintlayout.widget.ConstraintLayout>


            <SeekBar
                android:id="@+id/FirstSeekBar"
                android:layout_width="350dp"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.02"
                app:layout_constraintStart_toEndOf="@+id/FirstBtnPlay"
                app:layout_constraintTop_toBottomOf="@+id/layoutPengertianSD" />

            <LinearLayout
                android:id="@+id/FirstLinearLayout"
                android:layout_width="340dp"
                android:layout_height="wrap_content"
                android:layout_marginBottom="32dp"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.12"
                app:layout_constraintStart_toStartOf="@+id/FirstSeekBar"
                app:layout_constraintTop_toBottomOf="@+id/FirstSeekBar">

                <TextView
                    android:id="@+id/FirstElapsedTimeLabel"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="0:11" />

                <TextView
                    android:id="@+id/FirstRemainingTimeLabel"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_marginLeft="265dp"
                    android:text="-1:49" />

            </LinearLayout>

            <Button
                android:id="@+id/FirstBtnPlay"
                android:layout_width="50dp"
                android:layout_height="50dp"
                android:background="@drawable/play_sound"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintHorizontal_bias="0.13"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toBottomOf="@+id/layoutPengertianSD"
                app:layout_constraintVertical_bias="0.23000002" />
        </androidx.constraintlayout.widget.ConstraintLayout>
    </ScrollView>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/nav_top_algoritma"
        android:layout_width="match_parent"
        android:layout_height="60dp"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <com.google.android.material.bottomnavigation.BottomNavigationView
            android:layout_width="match_parent"
            android:layout_height="55dp"
            android:layout_gravity="bottom"
            android:background="@color/colorAegeanBlue"
            app:itemIconSize="80px"
            app:itemIconTint="@drawable/state_btnnav"
            app:itemTextColor="@drawable/state_btnnav"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent"
            app:menu="@menu/navigasi_top"></com.google.android.material.bottomnavigation.BottomNavigationView>
    </androidx.constraintlayout.widget.ConstraintLayout>

    <ImageView
        android:id="@+id/imageView6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/icon_belajar_algoritma"
        app:layout_constraintBottom_toBottomOf="@+id/nav_top_algoritma"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.92"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.40" />

    <ImageButton
        android:id="@+id/back"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/colorAegeanBlue"
        android:src="@drawable/back"
        app:layout_constraintBottom_toBottomOf="@+id/nav_top_algoritma"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintHorizontal_bias="0.08"
        app:layout_constraintStart_toStartOf="@+id/nav_top_algoritma"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.42" />
</androidx.constraintlayout.widget.ConstraintLayout>